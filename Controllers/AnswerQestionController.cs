using Microsoft.AspNetCore.Mvc;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace FinalTask.Controllers
{
    [Route("api/[controller]")]
    [ApiController]

    public class AnswerQestionController : ControllerBase
    {
        [HttpGet("13")]

        public string Index2()
        {
            return "URLs are still limited in length​​. It helps users submit bookmarks for results" +
                ". GET is better for data that doesn't require security or has images or Word documents." + "\n" +
                "data to a web server or uploading files." + "\n" +
                "Indicates that the web server accepts the data contained in the message body." + "\n" +
                "The World Wide Web is used when sending user - generated" + "\n" +
                "4.Client Error Response(400 - 499)";
        }

        [HttpGet("Q14")]

        public string Index()
        {
            return "The async keyword turns a method into an async method, " + "\n" +
                "which allows you to use the await keyword in its body" + "\n" +
                "An asynchronous task is defined by a computation that runs on a background thread and " + "\n" +
                "whose result is published on the UI thread";
        }
        [HttpGet("Q15")]

        public IActionResult Index1()
        {
            return Ok("AddSingleton() creates a single instance of the service on first request, and" + "\n" +
"Reuse the same instance everywhere you need this service." + "\n" +
"AddScoped()" + "\n" +
"In a scoped service, we get a new instance for each HTTP request." + "\n" +
"However, if the service is required in multiple places within the same HTTP request," + "\n" +
"The same instance is provided for the entire scope of this HTTP request as in the view and controller." + "\n" +
"But every new HTTP request gets a new service instance." + "\n" +
"add transient()" + "\n" +
"For transient services, a new instance is provided each time a service instance is requested," +
" regardless of whether it is within the scope of the same HTTP request" + "\n" + "or across different HTTP requests.");
        }
        [HttpGet("Q18")]

        public IActionResult Index18()
        {
            return Ok(" A REST API(also known as a RESTful API) is an application programming" + "\n" +
         "   interface (API or Web API) that conforms to the constraints of the REST architectural " + "\n" +
          "  style and allows interaction with RESTful web services.REST stands for " + "\n" +
           " Representational State Transfer and was developed by computer scientist Roy Fielding.");
        }
        [HttpGet]

        public string Index19()
        {
            return "SOAPUI " + "\n" + "It is used by API protocols like soap, REST, GraphQL.  " + "\n" +
"	It is an API tool that provides data-driven testing." + "\n" +
"	It supports the customization of reports in various formats." + "\n" +
"	Mainly used for API automation testing.                      " + "\n" +
 "	SoapUI automated tests can be executed through the command-line interface." + "\n" +
"	Scripts can be reused very easily. It consists of asynchronous testing. " + "\n" +
"	Supports SOAP API testing.	" + "\n" +
"	A scripting language is Groovy." + "\n" +
"	SoapUI requests are easily accessible.  " + "\n" +
"POSTMAN" + "\n" +
 "It is used by the testing only the REST API." + "\n" +
"It’s a google chrome extension that does not have data-driven testing features." + "\n" +
 "     	However, It supports only JSON and HTML formats." + "\n" +
 "     	Used for REST API’s physical and analytic testing." + "\n" +
 "    	Strictly Does not support a command-line interface. " + "\n" +
 "	REST calls are saved for further use and accept swagger and RAML API formats." + "\n" +
" Does not support SOAP API testing." + "\n" +
 "A scripting language is JavaScript." + "\n" +
"Limited features are its drawback.";
        }
        [HttpGet("Q20")]

        public string Index20()
        {
            return "Bearer authentication (also known as token authentication)" + "\n" +
 "is an HTTP authentication scheme that includes a security token called a bearer token." + "\n" +
 "The name" + "Bearer Authentication" + "\n" +
" can be understood as" + "granting access to the holder of this token" + "\n" +
 "A bearer token is a cryptic string, usually generated by the server in response to a login request." + "\n" +
 "When making a request to a protected resource, the client must send this token in the Authorization header:" + "\n" +
"The Bearer authentication scheme was originally created as part of OAuth 2.0 in RFC 6750," + "\n" +
" but is sometimes used on its own. Similar to basic authentication, bearer authentication can only be used over HTTPS (SSL).";



        }

    }
    }
